== UVM.Idioms.configdb_set == map:cdbs, insert ==
uvm_config_db#(<CURSOR>)::set(this,"", "var_name", var_value);
== UVM.Idioms.configdb_get == map:cdbg, insert ==
uvm_config_db#(<CURSOR>)::get(this,"", "var_name", var);
== UVM.Idioms.object_utils == map:ou ==
`uvm_object_utils( |?CLASS_NAME| )
== UVM.Idioms.object_utils_block == map:oub ==
`uvm_object_utils_begin( |?CLASS_NAME| )
<SPLIT>
`uvm_object_utils_end
== UVM.Idioms.component_utils == map:icu ==
`uvm_component_utils( |?CLASS_NAME| )
== UVM.Idioms.component_utils_block == map:icub ==
`uvm_component_utils_begin( |?CLASS_NAME| )
<SPLIT>
`uvm_component_utils_end
== UVM.Idioms.uvm_field_int == map:ufi ==
    `uvm_field_int(<CURSOR>, UVM_DEFAULT)
== UVM.Idioms.uvm_field_string == map:ufs ==
    `uvm_field_string(<CURSOR>, UVM_DEFAULT)
== UVM.Idioms.uvm_field_enum == map:ufe ==
    `uvm_field_enum(<CURSOR>, <-ENUM_VAR->, UVM_DEFAULT)
== UVM.Idioms.uvm_field_real == map:ufr ==
    `uvm_field_real(<CURSOR>, UVM_DEFAULT)
== UVM.Idioms.analysis_port == map:isu == 
    uvm_analysis_port #(|?TYPE|) <CURSOR>_ap; // output a |TYPE|
== UVM.Idioms.analysis_export == map:isu == 
    uvm_analysis_export #(|?TYPE|) <CURSOR>_ae; // output a |TYPE|
== UVM.Idioms.objection == 
phase.raise_objection(this);
<SPLIT>
phase.drop_objection(this);
== ENDTEMPLATE ==
