== UVM Phases.build_phase == map:pb, sc:b == 
///////////////////////////////////////////////////////////////////////////////////////////////////
virtual function void build_phase(uvm_phase phase);
    super.build_phase(phase);
endfunction
== UVM Phases.connect_phase == map:pc, sc:c == 
///////////////////////////////////////////////////////////////////////////////////////////////////
virtual function void connect_phase(uvm_phase phase);
    super.connect_phase(phase);
endfunction
== UVM Phases.end_of_elaboration_phase == map:peoe, sc:e == 
///////////////////////////////////////////////////////////////////////////////////////////////////
virtual function void end_of_elaboration_phase(uvm_phase phase);
    super.end_of_elaboration_phase(phase);
endfunction
== UVM Phases.start_of_simulation_phase == map:psos, sc:s == 
///////////////////////////////////////////////////////////////////////////////////////////////////
virtual function void start_of_simulation_phase(uvm_phase phase);
    super.start_of_simulation_phase(phase);
endfunction
== UVM Phases.run_phase == map:pr, sc:r == 
///////////////////////////////////////////////////////////////////////////////////////////////////
virtual task run_phase(uvm_phase phase);
    super.run_phase(phase);
endtask
== UVM Phases.extract_phase == map:pr, sc:x == 
///////////////////////////////////////////////////////////////////////////////////////////////////
virtual task extract_phase(uvm_phase phase);
    super.extract_phase(phase);
endtask
== UVM Phases.check_phase == map:pr, sc:k == 
///////////////////////////////////////////////////////////////////////////////////////////////////
virtual task check_phase(uvm_phase phase);
    super.check_phase(phase);
endtask
== UVM Phases.report_phase == map:pr, sc:p == 
///////////////////////////////////////////////////////////////////////////////////////////////////
virtual task report_phase(uvm_phase phase);
    super.report_phase(phase);
endtask
== UVM Phases.final_phase == map:pr, sc:f == 
///////////////////////////////////////////////////////////////////////////////////////////////////
virtual task final_phase(uvm_phase phase);
    super.final_phase(phase);
endtask
== ENDTEMPLATE ==
